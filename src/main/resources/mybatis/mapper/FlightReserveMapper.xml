<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.LiteTravel.web.mapper.FlightReserveMapper">
  <resultMap id="BaseResultMap" type="com.LiteTravel.web.Model.FlightReserve">
    <id column="reserve_id" jdbcType="INTEGER" property="reserveId" />
    <result column="flight_id" jdbcType="INTEGER" property="flightId" />
    <result column="total" jdbcType="REAL" property="total" />
    <result column="selected" jdbcType="BIT" property="selected" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.LiteTravel.web.Model.FlightReserve">
    <result column="service" jdbcType="LONGVARCHAR" property="service" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    reserve_id, flight_id, total, selected, company_id
  </sql>
  <sql id="Blob_Column_List">
    service
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.LiteTravel.web.Model.FlightReserveExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from travel_flight_reserve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.LiteTravel.web.Model.FlightReserveExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from travel_flight_reserve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from travel_flight_reserve
    where reserve_id = #{reserveId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from travel_flight_reserve
    where reserve_id = #{reserveId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.LiteTravel.web.Model.FlightReserveExample">
    delete from travel_flight_reserve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.LiteTravel.web.Model.FlightReserve">
    <selectKey keyProperty="reserveId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into travel_flight_reserve (flight_id, total, selected, 
      company_id, service)
    values (#{flightId,jdbcType=INTEGER}, #{total,jdbcType=REAL}, #{selected,jdbcType=BIT}, 
      #{companyId,jdbcType=INTEGER}, #{service,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.LiteTravel.web.Model.FlightReserve">
    <selectKey keyProperty="reserveId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into travel_flight_reserve
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="flightId != null">
        flight_id,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="selected != null">
        selected,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="service != null">
        service,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="flightId != null">
        #{flightId,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        #{total,jdbcType=REAL},
      </if>
      <if test="selected != null">
        #{selected,jdbcType=BIT},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="service != null">
        #{service,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.LiteTravel.web.Model.FlightReserveExample" resultType="java.lang.Long">
    select count(*) from travel_flight_reserve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update travel_flight_reserve
    <set>
      <if test="record.reserveId != null">
        reserve_id = #{record.reserveId,jdbcType=INTEGER},
      </if>
      <if test="record.flightId != null">
        flight_id = #{record.flightId,jdbcType=INTEGER},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=REAL},
      </if>
      <if test="record.selected != null">
        selected = #{record.selected,jdbcType=BIT},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.service != null">
        service = #{record.service,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update travel_flight_reserve
    set reserve_id = #{record.reserveId,jdbcType=INTEGER},
      flight_id = #{record.flightId,jdbcType=INTEGER},
      total = #{record.total,jdbcType=REAL},
      selected = #{record.selected,jdbcType=BIT},
      company_id = #{record.companyId,jdbcType=INTEGER},
      service = #{record.service,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update travel_flight_reserve
    set reserve_id = #{record.reserveId,jdbcType=INTEGER},
      flight_id = #{record.flightId,jdbcType=INTEGER},
      total = #{record.total,jdbcType=REAL},
      selected = #{record.selected,jdbcType=BIT},
      company_id = #{record.companyId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.LiteTravel.web.Model.FlightReserve">
    update travel_flight_reserve
    <set>
      <if test="flightId != null">
        flight_id = #{flightId,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=REAL},
      </if>
      <if test="selected != null">
        selected = #{selected,jdbcType=BIT},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="service != null">
        service = #{service,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where reserve_id = #{reserveId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.LiteTravel.web.Model.FlightReserve">
    update travel_flight_reserve
    set flight_id = #{flightId,jdbcType=INTEGER},
      total = #{total,jdbcType=REAL},
      selected = #{selected,jdbcType=BIT},
      company_id = #{companyId,jdbcType=INTEGER},
      service = #{service,jdbcType=LONGVARCHAR}
    where reserve_id = #{reserveId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.LiteTravel.web.Model.FlightReserve">
    update travel_flight_reserve
    set flight_id = #{flightId,jdbcType=INTEGER},
      total = #{total,jdbcType=REAL},
      selected = #{selected,jdbcType=BIT},
      company_id = #{companyId,jdbcType=INTEGER}
    where reserve_id = #{reserveId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.LiteTravel.web.Model.FlightReserve">
    <id column="reserve_id" jdbcType="INTEGER" property="reserveId" />
    <result column="flight_id" jdbcType="INTEGER" property="flightId" />
    <result column="total" jdbcType="REAL" property="total" />
    <result column="selected" jdbcType="BIT" property="selected" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.LiteTravel.web.Model.FlightReserve">
    <result column="service" jdbcType="LONGVARCHAR" property="service" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    reserve_id, flight_id, total, selected, company_id
  </sql>
  <sql id="Blob_Column_List">
    service
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.LiteTravel.web.Model.FlightReserveExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from travel_flight_reserve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.LiteTravel.web.Model.FlightReserveExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from travel_flight_reserve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from travel_flight_reserve
    where reserve_id = #{reserveId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from travel_flight_reserve
    where reserve_id = #{reserveId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.LiteTravel.web.Model.FlightReserveExample">
    delete from travel_flight_reserve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.LiteTravel.web.Model.FlightReserve">
    <selectKey keyProperty="reserveId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into travel_flight_reserve (flight_id, total, selected, 
      company_id, service)
    values (#{flightId,jdbcType=INTEGER}, #{total,jdbcType=REAL}, #{selected,jdbcType=BIT}, 
      #{companyId,jdbcType=INTEGER}, #{service,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.LiteTravel.web.Model.FlightReserve">
    <selectKey keyProperty="reserveId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into travel_flight_reserve
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="flightId != null">
        flight_id,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="selected != null">
        selected,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="service != null">
        service,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="flightId != null">
        #{flightId,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        #{total,jdbcType=REAL},
      </if>
      <if test="selected != null">
        #{selected,jdbcType=BIT},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="service != null">
        #{service,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.LiteTravel.web.Model.FlightReserveExample" resultType="java.lang.Long">
    select count(*) from travel_flight_reserve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update travel_flight_reserve
    <set>
      <if test="record.reserveId != null">
        reserve_id = #{record.reserveId,jdbcType=INTEGER},
      </if>
      <if test="record.flightId != null">
        flight_id = #{record.flightId,jdbcType=INTEGER},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=REAL},
      </if>
      <if test="record.selected != null">
        selected = #{record.selected,jdbcType=BIT},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.service != null">
        service = #{record.service,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update travel_flight_reserve
    set reserve_id = #{record.reserveId,jdbcType=INTEGER},
      flight_id = #{record.flightId,jdbcType=INTEGER},
      total = #{record.total,jdbcType=REAL},
      selected = #{record.selected,jdbcType=BIT},
      company_id = #{record.companyId,jdbcType=INTEGER},
      service = #{record.service,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update travel_flight_reserve
    set reserve_id = #{record.reserveId,jdbcType=INTEGER},
      flight_id = #{record.flightId,jdbcType=INTEGER},
      total = #{record.total,jdbcType=REAL},
      selected = #{record.selected,jdbcType=BIT},
      company_id = #{record.companyId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.LiteTravel.web.Model.FlightReserve">
    update travel_flight_reserve
    <set>
      <if test="flightId != null">
        flight_id = #{flightId,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=REAL},
      </if>
      <if test="selected != null">
        selected = #{selected,jdbcType=BIT},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="service != null">
        service = #{service,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where reserve_id = #{reserveId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.LiteTravel.web.Model.FlightReserve">
    update travel_flight_reserve
    set flight_id = #{flightId,jdbcType=INTEGER},
      total = #{total,jdbcType=REAL},
      selected = #{selected,jdbcType=BIT},
      company_id = #{companyId,jdbcType=INTEGER},
      service = #{service,jdbcType=LONGVARCHAR}
    where reserve_id = #{reserveId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.LiteTravel.web.Model.FlightReserve">
    update travel_flight_reserve
    set flight_id = #{flightId,jdbcType=INTEGER},
      total = #{total,jdbcType=REAL},
      selected = #{selected,jdbcType=BIT},
      company_id = #{companyId,jdbcType=INTEGER}
    where reserve_id = #{reserveId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.LiteTravel.web.Model.FlightReserve">
    <id column="reserve_id" jdbcType="INTEGER" property="reserveId" />
    <result column="flight_id" jdbcType="INTEGER" property="flightId" />
    <result column="total" jdbcType="REAL" property="total" />
    <result column="selected" jdbcType="BIT" property="selected" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.LiteTravel.web.Model.FlightReserve">
    <result column="service" jdbcType="LONGVARCHAR" property="service" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    reserve_id, flight_id, total, selected, company_id
  </sql>
  <sql id="Blob_Column_List">
    service
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.LiteTravel.web.Model.FlightReserveExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from travel_flight_reserve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.LiteTravel.web.Model.FlightReserveExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from travel_flight_reserve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from travel_flight_reserve
    where reserve_id = #{reserveId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from travel_flight_reserve
    where reserve_id = #{reserveId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.LiteTravel.web.Model.FlightReserveExample">
    delete from travel_flight_reserve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.LiteTravel.web.Model.FlightReserve">
    <selectKey keyProperty="reserveId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into travel_flight_reserve (flight_id, total, selected, 
      company_id, service)
    values (#{flightId,jdbcType=INTEGER}, #{total,jdbcType=REAL}, #{selected,jdbcType=BIT}, 
      #{companyId,jdbcType=INTEGER}, #{service,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.LiteTravel.web.Model.FlightReserve">
    <selectKey keyProperty="reserveId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into travel_flight_reserve
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="flightId != null">
        flight_id,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="selected != null">
        selected,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="service != null">
        service,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="flightId != null">
        #{flightId,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        #{total,jdbcType=REAL},
      </if>
      <if test="selected != null">
        #{selected,jdbcType=BIT},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="service != null">
        #{service,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.LiteTravel.web.Model.FlightReserveExample" resultType="java.lang.Long">
    select count(*) from travel_flight_reserve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update travel_flight_reserve
    <set>
      <if test="record.reserveId != null">
        reserve_id = #{record.reserveId,jdbcType=INTEGER},
      </if>
      <if test="record.flightId != null">
        flight_id = #{record.flightId,jdbcType=INTEGER},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=REAL},
      </if>
      <if test="record.selected != null">
        selected = #{record.selected,jdbcType=BIT},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.service != null">
        service = #{record.service,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update travel_flight_reserve
    set reserve_id = #{record.reserveId,jdbcType=INTEGER},
      flight_id = #{record.flightId,jdbcType=INTEGER},
      total = #{record.total,jdbcType=REAL},
      selected = #{record.selected,jdbcType=BIT},
      company_id = #{record.companyId,jdbcType=INTEGER},
      service = #{record.service,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update travel_flight_reserve
    set reserve_id = #{record.reserveId,jdbcType=INTEGER},
      flight_id = #{record.flightId,jdbcType=INTEGER},
      total = #{record.total,jdbcType=REAL},
      selected = #{record.selected,jdbcType=BIT},
      company_id = #{record.companyId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.LiteTravel.web.Model.FlightReserve">
    update travel_flight_reserve
    <set>
      <if test="flightId != null">
        flight_id = #{flightId,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=REAL},
      </if>
      <if test="selected != null">
        selected = #{selected,jdbcType=BIT},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="service != null">
        service = #{service,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where reserve_id = #{reserveId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.LiteTravel.web.Model.FlightReserve">
    update travel_flight_reserve
    set flight_id = #{flightId,jdbcType=INTEGER},
      total = #{total,jdbcType=REAL},
      selected = #{selected,jdbcType=BIT},
      company_id = #{companyId,jdbcType=INTEGER},
      service = #{service,jdbcType=LONGVARCHAR}
    where reserve_id = #{reserveId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.LiteTravel.web.Model.FlightReserve">
    update travel_flight_reserve
    set flight_id = #{flightId,jdbcType=INTEGER},
      total = #{total,jdbcType=REAL},
      selected = #{selected,jdbcType=BIT},
      company_id = #{companyId,jdbcType=INTEGER}
    where reserve_id = #{reserveId,jdbcType=INTEGER}
  </update>
</mapper>