<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.LiteTravel.web.mapper.OrderCommentMapper">
  <resultMap id="BaseResultMap" type="com.LiteTravel.web.Model.OrderComment">
    <id column="oc_id" jdbcType="INTEGER" property="ocId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="hotel_id" jdbcType="INTEGER" property="hotelId" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="oc_score" jdbcType="INTEGER" property="ocScore" />
    <result column="oc_detail" jdbcType="VARCHAR" property="ocDetail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    oc_id, user_name, hotel_id, order_id, oc_score, oc_detail
  </sql>
  <select id="selectByExample" parameterType="com.LiteTravel.web.Model.OrderCommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from travel_order_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from travel_order_comment
    where oc_id = #{ocId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from travel_order_comment
    where oc_id = #{ocId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.LiteTravel.web.Model.OrderCommentExample">
    delete from travel_order_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.LiteTravel.web.Model.OrderComment">
    insert into travel_order_comment (oc_id, user_name, hotel_id, 
      order_id, oc_score, oc_detail
      )
    values (#{ocId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{hotelId,jdbcType=INTEGER}, 
      #{orderId,jdbcType=INTEGER}, #{ocScore,jdbcType=INTEGER}, #{ocDetail,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.LiteTravel.web.Model.OrderComment">
    insert into travel_order_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ocId != null">
        oc_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="hotelId != null">
        hotel_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="ocScore != null">
        oc_score,
      </if>
      <if test="ocDetail != null">
        oc_detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ocId != null">
        #{ocId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="hotelId != null">
        #{hotelId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="ocScore != null">
        #{ocScore,jdbcType=INTEGER},
      </if>
      <if test="ocDetail != null">
        #{ocDetail,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.LiteTravel.web.Model.OrderCommentExample" resultType="java.lang.Long">
    select count(*) from travel_order_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update travel_order_comment
    <set>
      <if test="record.ocId != null">
        oc_id = #{record.ocId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.hotelId != null">
        hotel_id = #{record.hotelId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.ocScore != null">
        oc_score = #{record.ocScore,jdbcType=INTEGER},
      </if>
      <if test="record.ocDetail != null">
        oc_detail = #{record.ocDetail,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update travel_order_comment
    set oc_id = #{record.ocId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      hotel_id = #{record.hotelId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      oc_score = #{record.ocScore,jdbcType=INTEGER},
      oc_detail = #{record.ocDetail,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.LiteTravel.web.Model.OrderComment">
    update travel_order_comment
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="hotelId != null">
        hotel_id = #{hotelId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="ocScore != null">
        oc_score = #{ocScore,jdbcType=INTEGER},
      </if>
      <if test="ocDetail != null">
        oc_detail = #{ocDetail,jdbcType=VARCHAR},
      </if>
    </set>
    where oc_id = #{ocId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.LiteTravel.web.Model.OrderComment">
    update travel_order_comment
    set user_name = #{userName,jdbcType=VARCHAR},
      hotel_id = #{hotelId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      oc_score = #{ocScore,jdbcType=INTEGER},
      oc_detail = #{ocDetail,jdbcType=VARCHAR}
    where oc_id = #{ocId,jdbcType=INTEGER}
  </update>
</mapper>